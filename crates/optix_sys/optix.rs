/* automatically generated by rust-bindgen 0.58.1 */

#[repr(C)]
pub struct __BindgenUnionField<T>(::std::marker::PhantomData<T>);
impl<T> __BindgenUnionField<T> {
    #[inline]
    pub const fn new() -> Self {
        __BindgenUnionField(::std::marker::PhantomData)
    }
    #[inline]
    pub unsafe fn as_ref(&self) -> &T {
        ::std::mem::transmute(self)
    }
    #[inline]
    pub unsafe fn as_mut(&mut self) -> &mut T {
        ::std::mem::transmute(self)
    }
}
impl<T> ::std::default::Default for __BindgenUnionField<T> {
    #[inline]
    fn default() -> Self {
        Self::new()
    }
}
impl<T> ::std::clone::Clone for __BindgenUnionField<T> {
    #[inline]
    fn clone(&self) -> Self {
        Self::new()
    }
}
impl<T> ::std::marker::Copy for __BindgenUnionField<T> {}
impl<T> ::std::fmt::Debug for __BindgenUnionField<T> {
    fn fmt(&self, fmt: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        fmt.write_str("__BindgenUnionField")
    }
}
impl<T> ::std::hash::Hash for __BindgenUnionField<T> {
    fn hash<H: ::std::hash::Hasher>(&self, _state: &mut H) {}
}
impl<T> ::std::cmp::PartialEq for __BindgenUnionField<T> {
    fn eq(&self, _other: &__BindgenUnionField<T>) -> bool {
        true
    }
}
impl<T> ::std::cmp::Eq for __BindgenUnionField<T> {}
pub const OPTIX_VERSION: u32 = 70300;
pub const OPTIX_SBT_RECORD_ALIGNMENT: u32 = 16;
pub const OPTIX_ACCEL_BUFFER_BYTE_ALIGNMENT: u32 = 128;
pub const OPTIX_INSTANCE_BYTE_ALIGNMENT: u32 = 16;
pub const OPTIX_AABB_BUFFER_BYTE_ALIGNMENT: u32 = 8;
pub const OPTIX_GEOMETRY_TRANSFORM_BYTE_ALIGNMENT: u32 = 16;
pub const OPTIX_TRANSFORM_BYTE_ALIGNMENT: u32 = 64;
pub const OPTIX_COMPILE_DEFAULT_MAX_REGISTER_COUNT: u32 = 0;
pub const OPTIX_COMPILE_DEFAULT_MAX_PAYLOAD_VALUE_COUNT: u32 = 8;
pub const OPTIX_ABI_VERSION: u32 = 47;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixDeviceContext_t {
    _unused: [u8; 0],
}
pub type OptixDeviceContext = *mut OptixDeviceContext_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixModule_t {
    _unused: [u8; 0],
}
pub type OptixModule = *mut OptixModule_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixProgramGroup_t {
    _unused: [u8; 0],
}
pub type OptixProgramGroup = *mut OptixProgramGroup_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixPipeline_t {
    _unused: [u8; 0],
}
pub type OptixPipeline = *mut OptixPipeline_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixDenoiser_t {
    _unused: [u8; 0],
}
pub type OptixDenoiser = *mut OptixDenoiser_t;
pub type OptixTraversableHandle = ::std::os::raw::c_ulonglong;
pub type OptixVisibilityMask = ::std::os::raw::c_uint;
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixResult {
    OPTIX_SUCCESS = 0,
    OPTIX_ERROR_INVALID_VALUE = 7001,
    OPTIX_ERROR_HOST_OUT_OF_MEMORY = 7002,
    OPTIX_ERROR_INVALID_OPERATION = 7003,
    OPTIX_ERROR_FILE_IO_ERROR = 7004,
    OPTIX_ERROR_INVALID_FILE_FORMAT = 7005,
    OPTIX_ERROR_DISK_CACHE_INVALID_PATH = 7010,
    OPTIX_ERROR_DISK_CACHE_PERMISSION_ERROR = 7011,
    OPTIX_ERROR_DISK_CACHE_DATABASE_ERROR = 7012,
    OPTIX_ERROR_DISK_CACHE_INVALID_DATA = 7013,
    OPTIX_ERROR_LAUNCH_FAILURE = 7050,
    OPTIX_ERROR_INVALID_DEVICE_CONTEXT = 7051,
    OPTIX_ERROR_CUDA_NOT_INITIALIZED = 7052,
    OPTIX_ERROR_VALIDATION_FAILURE = 7053,
    OPTIX_ERROR_INVALID_PTX = 7200,
    OPTIX_ERROR_INVALID_LAUNCH_PARAMETER = 7201,
    OPTIX_ERROR_INVALID_PAYLOAD_ACCESS = 7202,
    OPTIX_ERROR_INVALID_ATTRIBUTE_ACCESS = 7203,
    OPTIX_ERROR_INVALID_FUNCTION_USE = 7204,
    OPTIX_ERROR_INVALID_FUNCTION_ARGUMENTS = 7205,
    OPTIX_ERROR_PIPELINE_OUT_OF_CONSTANT_MEMORY = 7250,
    OPTIX_ERROR_PIPELINE_LINK_ERROR = 7251,
    OPTIX_ERROR_ILLEGAL_DURING_TASK_EXECUTE = 7270,
    OPTIX_ERROR_INTERNAL_COMPILER_ERROR = 7299,
    OPTIX_ERROR_DENOISER_MODEL_NOT_SET = 7300,
    OPTIX_ERROR_DENOISER_NOT_INITIALIZED = 7301,
    OPTIX_ERROR_ACCEL_NOT_COMPATIBLE = 7400,
    OPTIX_ERROR_NOT_SUPPORTED = 7800,
    OPTIX_ERROR_UNSUPPORTED_ABI_VERSION = 7801,
    OPTIX_ERROR_FUNCTION_TABLE_SIZE_MISMATCH = 7802,
    OPTIX_ERROR_INVALID_ENTRY_FUNCTION_OPTIONS = 7803,
    OPTIX_ERROR_LIBRARY_NOT_FOUND = 7804,
    OPTIX_ERROR_ENTRY_SYMBOL_NOT_FOUND = 7805,
    OPTIX_ERROR_LIBRARY_UNLOAD_FAILURE = 7806,
    OPTIX_ERROR_CUDA_ERROR = 7900,
    OPTIX_ERROR_INTERNAL_ERROR = 7990,
    OPTIX_ERROR_UNKNOWN = 7999,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixDeviceProperty {
    OPTIX_DEVICE_PROPERTY_LIMIT_MAX_TRACE_DEPTH = 8193,
    OPTIX_DEVICE_PROPERTY_LIMIT_MAX_TRAVERSABLE_GRAPH_DEPTH = 8194,
    OPTIX_DEVICE_PROPERTY_LIMIT_MAX_PRIMITIVES_PER_GAS = 8195,
    OPTIX_DEVICE_PROPERTY_LIMIT_MAX_INSTANCES_PER_IAS = 8196,
    OPTIX_DEVICE_PROPERTY_RTCORE_VERSION = 8197,
    OPTIX_DEVICE_PROPERTY_LIMIT_MAX_INSTANCE_ID = 8198,
    OPTIX_DEVICE_PROPERTY_LIMIT_NUM_BITS_INSTANCE_VISIBILITY_MASK = 8199,
    OPTIX_DEVICE_PROPERTY_LIMIT_MAX_SBT_RECORDS_PER_GAS = 8200,
    OPTIX_DEVICE_PROPERTY_LIMIT_MAX_SBT_OFFSET = 8201,
}
pub type OptixLogCallback = ::std::option::Option<
    unsafe extern "C" fn(
        level: ::std::os::raw::c_uint,
        tag: *const ::std::os::raw::c_char,
        message: *const ::std::os::raw::c_char,
        cbdata: *mut ::std::os::raw::c_void,
    ),
>;
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixDeviceContextValidationMode {
    OPTIX_DEVICE_CONTEXT_VALIDATION_MODE_OFF = 0,
    OPTIX_DEVICE_CONTEXT_VALIDATION_MODE_ALL = -1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixDeviceContextOptions {
    pub logCallbackFunction: OptixLogCallback,
    pub logCallbackData: *mut ::std::os::raw::c_void,
    pub logCallbackLevel: ::std::os::raw::c_int,
    pub validationMode: OptixDeviceContextValidationMode,
}
impl Default for OptixDeviceContextOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixGeometryFlags {
    OPTIX_GEOMETRY_FLAG_NONE = 0,
    OPTIX_GEOMETRY_FLAG_DISABLE_ANYHIT = 1,
    OPTIX_GEOMETRY_FLAG_REQUIRE_SINGLE_ANYHIT_CALL = 2,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixHitKind {
    OPTIX_HIT_KIND_TRIANGLE_FRONT_FACE = 254,
    OPTIX_HIT_KIND_TRIANGLE_BACK_FACE = 255,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixIndicesFormat {
    OPTIX_INDICES_FORMAT_NONE = 0,
    OPTIX_INDICES_FORMAT_UNSIGNED_SHORT3 = 8450,
    OPTIX_INDICES_FORMAT_UNSIGNED_INT3 = 8451,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixVertexFormat {
    OPTIX_VERTEX_FORMAT_NONE = 0,
    OPTIX_VERTEX_FORMAT_FLOAT3 = 8481,
    OPTIX_VERTEX_FORMAT_FLOAT2 = 8482,
    OPTIX_VERTEX_FORMAT_HALF3 = 8483,
    OPTIX_VERTEX_FORMAT_HALF2 = 8484,
    OPTIX_VERTEX_FORMAT_SNORM16_3 = 8485,
    OPTIX_VERTEX_FORMAT_SNORM16_2 = 8486,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixTransformFormat {
    OPTIX_TRANSFORM_FORMAT_NONE = 0,
    OPTIX_TRANSFORM_FORMAT_MATRIX_FLOAT12 = 8673,
}
#[repr(C)]
pub struct OptixBuildInputTriangleArray {
    pub vertexBuffers: *const CUdeviceptr,
    pub numVertices: ::std::os::raw::c_uint,
    pub vertexFormat: OptixVertexFormat,
    pub vertexStrideInBytes: ::std::os::raw::c_uint,
    pub indexBuffer: CUdeviceptr,
    pub numIndexTriplets: ::std::os::raw::c_uint,
    pub indexFormat: OptixIndicesFormat,
    pub indexStrideInBytes: ::std::os::raw::c_uint,
    pub preTransform: CUdeviceptr,
    pub flags: *const ::std::os::raw::c_uint,
    pub numSbtRecords: ::std::os::raw::c_uint,
    pub sbtIndexOffsetBuffer: CUdeviceptr,
    pub sbtIndexOffsetSizeInBytes: ::std::os::raw::c_uint,
    pub sbtIndexOffsetStrideInBytes: ::std::os::raw::c_uint,
    pub primitiveIndexOffset: ::std::os::raw::c_uint,
    pub transformFormat: OptixTransformFormat,
}
impl Default for OptixBuildInputTriangleArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixPrimitiveType {
    OPTIX_PRIMITIVE_TYPE_CUSTOM = 9472,
    OPTIX_PRIMITIVE_TYPE_ROUND_QUADRATIC_BSPLINE = 9473,
    OPTIX_PRIMITIVE_TYPE_ROUND_CUBIC_BSPLINE = 9474,
    OPTIX_PRIMITIVE_TYPE_ROUND_LINEAR = 9475,
    OPTIX_PRIMITIVE_TYPE_TRIANGLE = 9521,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixPrimitiveTypeFlags {
    OPTIX_PRIMITIVE_TYPE_FLAGS_CUSTOM = 1,
    OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_QUADRATIC_BSPLINE = 2,
    OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_CUBIC_BSPLINE = 4,
    OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_LINEAR = 8,
    OPTIX_PRIMITIVE_TYPE_FLAGS_TRIANGLE = -2147483648,
}
#[repr(C)]
pub struct OptixBuildInputCurveArray {
    pub curveType: OptixPrimitiveType,
    pub numPrimitives: ::std::os::raw::c_uint,
    pub vertexBuffers: *const CUdeviceptr,
    pub numVertices: ::std::os::raw::c_uint,
    pub vertexStrideInBytes: ::std::os::raw::c_uint,
    pub widthBuffers: *const CUdeviceptr,
    pub widthStrideInBytes: ::std::os::raw::c_uint,
    pub normalBuffers: *const CUdeviceptr,
    pub normalStrideInBytes: ::std::os::raw::c_uint,
    pub indexBuffer: CUdeviceptr,
    pub indexStrideInBytes: ::std::os::raw::c_uint,
    pub flag: ::std::os::raw::c_uint,
    pub primitiveIndexOffset: ::std::os::raw::c_uint,
}
impl Default for OptixBuildInputCurveArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixAabb {
    pub minX: f32,
    pub minY: f32,
    pub minZ: f32,
    pub maxX: f32,
    pub maxY: f32,
    pub maxZ: f32,
}
#[repr(C)]
pub struct OptixBuildInputCustomPrimitiveArray {
    pub aabbBuffers: *const CUdeviceptr,
    pub numPrimitives: ::std::os::raw::c_uint,
    pub strideInBytes: ::std::os::raw::c_uint,
    pub flags: *const ::std::os::raw::c_uint,
    pub numSbtRecords: ::std::os::raw::c_uint,
    pub sbtIndexOffsetBuffer: CUdeviceptr,
    pub sbtIndexOffsetSizeInBytes: ::std::os::raw::c_uint,
    pub sbtIndexOffsetStrideInBytes: ::std::os::raw::c_uint,
    pub primitiveIndexOffset: ::std::os::raw::c_uint,
}
impl Default for OptixBuildInputCustomPrimitiveArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixBuildInputInstanceArray {
    pub instances: CUdeviceptr,
    pub numInstances: ::std::os::raw::c_uint,
}
impl Default for OptixBuildInputInstanceArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixBuildInputType {
    OPTIX_BUILD_INPUT_TYPE_TRIANGLES = 8513,
    OPTIX_BUILD_INPUT_TYPE_CUSTOM_PRIMITIVES = 8514,
    OPTIX_BUILD_INPUT_TYPE_INSTANCES = 8515,
    OPTIX_BUILD_INPUT_TYPE_INSTANCE_POINTERS = 8516,
    OPTIX_BUILD_INPUT_TYPE_CURVES = 8517,
}
#[repr(C)]
pub struct OptixBuildInput {
    pub type_: OptixBuildInputType,
    pub __bindgen_anon_1: OptixBuildInput__bindgen_ty_1,
}
#[repr(C)]
pub struct OptixBuildInput__bindgen_ty_1 {
    pub triangleArray: __BindgenUnionField<OptixBuildInputTriangleArray>,
    pub curveArray: __BindgenUnionField<OptixBuildInputCurveArray>,
    pub customPrimitiveArray: __BindgenUnionField<OptixBuildInputCustomPrimitiveArray>,
    pub instanceArray: __BindgenUnionField<OptixBuildInputInstanceArray>,
    pub pad: __BindgenUnionField<[::std::os::raw::c_char; 1024usize]>,
    pub bindgen_union_field: [u64; 128usize],
}
impl Default for OptixBuildInput__bindgen_ty_1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
impl Default for OptixBuildInput {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixInstanceFlags {
    OPTIX_INSTANCE_FLAG_NONE = 0,
    OPTIX_INSTANCE_FLAG_DISABLE_TRIANGLE_FACE_CULLING = 1,
    OPTIX_INSTANCE_FLAG_FLIP_TRIANGLE_FACING = 2,
    OPTIX_INSTANCE_FLAG_DISABLE_ANYHIT = 4,
    OPTIX_INSTANCE_FLAG_ENFORCE_ANYHIT = 8,
    OPTIX_INSTANCE_FLAG_DISABLE_TRANSFORM = 64,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixInstance {
    pub transform: [f32; 12usize],
    pub instanceId: ::std::os::raw::c_uint,
    pub sbtOffset: ::std::os::raw::c_uint,
    pub visibilityMask: ::std::os::raw::c_uint,
    pub flags: ::std::os::raw::c_uint,
    pub traversableHandle: OptixTraversableHandle,
    pub pad: [::std::os::raw::c_uint; 2usize],
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixBuildFlags {
    OPTIX_BUILD_FLAG_NONE = 0,
    OPTIX_BUILD_FLAG_ALLOW_UPDATE = 1,
    OPTIX_BUILD_FLAG_ALLOW_COMPACTION = 2,
    OPTIX_BUILD_FLAG_PREFER_FAST_TRACE = 4,
    OPTIX_BUILD_FLAG_PREFER_FAST_BUILD = 8,
    OPTIX_BUILD_FLAG_ALLOW_RANDOM_VERTEX_ACCESS = 16,
    OPTIX_BUILD_FLAG_ALLOW_RANDOM_INSTANCE_ACCESS = 32,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixBuildOperation {
    OPTIX_BUILD_OPERATION_BUILD = 8545,
    OPTIX_BUILD_OPERATION_UPDATE = 8546,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixMotionFlags {
    OPTIX_MOTION_FLAG_NONE = 0,
    OPTIX_MOTION_FLAG_START_VANISH = 1,
    OPTIX_MOTION_FLAG_END_VANISH = 2,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixMotionOptions {
    pub numKeys: ::std::os::raw::c_ushort,
    pub flags: ::std::os::raw::c_ushort,
    pub timeBegin: f32,
    pub timeEnd: f32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixAccelBuildOptions {
    pub buildFlags: ::std::os::raw::c_uint,
    pub operation: OptixBuildOperation,
    pub motionOptions: OptixMotionOptions,
}
impl Default for OptixAccelBuildOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct OptixAccelBufferSizes {
    pub outputSizeInBytes: usize,
    pub tempSizeInBytes: usize,
    pub tempUpdateSizeInBytes: usize,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixAccelPropertyType {
    OPTIX_PROPERTY_TYPE_COMPACTED_SIZE = 8577,
    OPTIX_PROPERTY_TYPE_AABBS = 8578,
}
#[repr(C)]
pub struct OptixAccelEmitDesc {
    pub result: CUdeviceptr,
    pub type_: OptixAccelPropertyType,
}
impl Default for OptixAccelEmitDesc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct OptixAccelRelocationInfo {
    pub info: [::std::os::raw::c_ulonglong; 4usize],
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixStaticTransform {
    pub child: OptixTraversableHandle,
    pub pad: [::std::os::raw::c_uint; 2usize],
    pub transform: [f32; 12usize],
    pub invTransform: [f32; 12usize],
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixMatrixMotionTransform {
    pub child: OptixTraversableHandle,
    pub motionOptions: OptixMotionOptions,
    pub pad: [::std::os::raw::c_uint; 3usize],
    pub transform: [[f32; 12usize]; 2usize],
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixSRTData {
    pub sx: f32,
    pub a: f32,
    pub b: f32,
    pub pvx: f32,
    pub sy: f32,
    pub c: f32,
    pub pvy: f32,
    pub sz: f32,
    pub pvz: f32,
    pub qx: f32,
    pub qy: f32,
    pub qz: f32,
    pub qw: f32,
    pub tx: f32,
    pub ty: f32,
    pub tz: f32,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixSRTMotionTransform {
    pub child: OptixTraversableHandle,
    pub motionOptions: OptixMotionOptions,
    pub pad: [::std::os::raw::c_uint; 3usize],
    pub srtData: [OptixSRTData; 2usize],
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixTraversableType {
    OPTIX_TRAVERSABLE_TYPE_STATIC_TRANSFORM = 8641,
    OPTIX_TRAVERSABLE_TYPE_MATRIX_MOTION_TRANSFORM = 8642,
    OPTIX_TRAVERSABLE_TYPE_SRT_MOTION_TRANSFORM = 8643,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixPixelFormat {
    OPTIX_PIXEL_FORMAT_HALF2 = 8711,
    OPTIX_PIXEL_FORMAT_HALF3 = 8705,
    OPTIX_PIXEL_FORMAT_HALF4 = 8706,
    OPTIX_PIXEL_FORMAT_FLOAT2 = 8712,
    OPTIX_PIXEL_FORMAT_FLOAT3 = 8707,
    OPTIX_PIXEL_FORMAT_FLOAT4 = 8708,
    OPTIX_PIXEL_FORMAT_UCHAR3 = 8709,
    OPTIX_PIXEL_FORMAT_UCHAR4 = 8710,
}
#[repr(C)]
pub struct OptixImage2D {
    pub data: CUdeviceptr,
    pub width: ::std::os::raw::c_uint,
    pub height: ::std::os::raw::c_uint,
    pub rowStrideInBytes: ::std::os::raw::c_uint,
    pub pixelStrideInBytes: ::std::os::raw::c_uint,
    pub format: OptixPixelFormat,
}
impl Default for OptixImage2D {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixDenoiserModelKind {
    OPTIX_DENOISER_MODEL_KIND_LDR = 8994,
    OPTIX_DENOISER_MODEL_KIND_HDR = 8995,
    OPTIX_DENOISER_MODEL_KIND_AOV = 8996,
    OPTIX_DENOISER_MODEL_KIND_TEMPORAL = 8997,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct OptixDenoiserOptions {
    pub guideAlbedo: ::std::os::raw::c_uint,
    pub guideNormal: ::std::os::raw::c_uint,
}
#[repr(C)]
pub struct OptixDenoiserGuideLayer {
    pub albedo: OptixImage2D,
    pub normal: OptixImage2D,
    pub flow: OptixImage2D,
}
impl Default for OptixDenoiserGuideLayer {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixDenoiserLayer {
    pub input: OptixImage2D,
    pub previousOutput: OptixImage2D,
    pub output: OptixImage2D,
}
impl Default for OptixDenoiserLayer {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixDenoiserParams {
    pub denoiseAlpha: ::std::os::raw::c_uint,
    pub hdrIntensity: CUdeviceptr,
    pub blendFactor: f32,
    pub hdrAverageColor: CUdeviceptr,
}
impl Default for OptixDenoiserParams {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct OptixDenoiserSizes {
    pub stateSizeInBytes: usize,
    pub withOverlapScratchSizeInBytes: usize,
    pub withoutOverlapScratchSizeInBytes: usize,
    pub overlapWindowSizeInPixels: ::std::os::raw::c_uint,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixRayFlags {
    OPTIX_RAY_FLAG_NONE = 0,
    OPTIX_RAY_FLAG_DISABLE_ANYHIT = 1,
    OPTIX_RAY_FLAG_ENFORCE_ANYHIT = 2,
    OPTIX_RAY_FLAG_TERMINATE_ON_FIRST_HIT = 4,
    OPTIX_RAY_FLAG_DISABLE_CLOSESTHIT = 8,
    OPTIX_RAY_FLAG_CULL_BACK_FACING_TRIANGLES = 16,
    OPTIX_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES = 32,
    OPTIX_RAY_FLAG_CULL_DISABLED_ANYHIT = 64,
    OPTIX_RAY_FLAG_CULL_ENFORCED_ANYHIT = 128,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixTransformType {
    OPTIX_TRANSFORM_TYPE_NONE = 0,
    OPTIX_TRANSFORM_TYPE_STATIC_TRANSFORM = 1,
    OPTIX_TRANSFORM_TYPE_MATRIX_MOTION_TRANSFORM = 2,
    OPTIX_TRANSFORM_TYPE_SRT_MOTION_TRANSFORM = 3,
    OPTIX_TRANSFORM_TYPE_INSTANCE = 4,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixTraversableGraphFlags {
    OPTIX_TRAVERSABLE_GRAPH_FLAG_ALLOW_ANY = 0,
    OPTIX_TRAVERSABLE_GRAPH_FLAG_ALLOW_SINGLE_GAS = 1,
    OPTIX_TRAVERSABLE_GRAPH_FLAG_ALLOW_SINGLE_LEVEL_INSTANCING = 2,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixCompileOptimizationLevel {
    OPTIX_COMPILE_OPTIMIZATION_DEFAULT = 0,
    OPTIX_COMPILE_OPTIMIZATION_LEVEL_0 = 9024,
    OPTIX_COMPILE_OPTIMIZATION_LEVEL_1 = 9025,
    OPTIX_COMPILE_OPTIMIZATION_LEVEL_2 = 9026,
    OPTIX_COMPILE_OPTIMIZATION_LEVEL_3 = 9027,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixCompileDebugLevel {
    OPTIX_COMPILE_DEBUG_LEVEL_DEFAULT = 0,
    OPTIX_COMPILE_DEBUG_LEVEL_NONE = 9040,
    OPTIX_COMPILE_DEBUG_LEVEL_LINEINFO = 9041,
    OPTIX_COMPILE_DEBUG_LEVEL_FULL = 9042,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixModuleCompileBoundValueEntry {
    pub pipelineParamOffsetInBytes: usize,
    pub sizeInBytes: usize,
    pub boundValuePtr: *const ::std::os::raw::c_void,
    pub annotation: *const ::std::os::raw::c_char,
}
impl Default for OptixModuleCompileBoundValueEntry {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixModuleCompileOptions {
    pub maxRegisterCount: ::std::os::raw::c_int,
    pub optLevel: OptixCompileOptimizationLevel,
    pub debugLevel: OptixCompileDebugLevel,
    pub boundValues: *const OptixModuleCompileBoundValueEntry,
    pub numBoundValues: ::std::os::raw::c_uint,
}
impl Default for OptixModuleCompileOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixProgramGroupKind {
    OPTIX_PROGRAM_GROUP_KIND_RAYGEN = 9249,
    OPTIX_PROGRAM_GROUP_KIND_MISS = 9250,
    OPTIX_PROGRAM_GROUP_KIND_EXCEPTION = 9251,
    OPTIX_PROGRAM_GROUP_KIND_HITGROUP = 9252,
    OPTIX_PROGRAM_GROUP_KIND_CALLABLES = 9253,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixProgramGroupFlags {
    OPTIX_PROGRAM_GROUP_FLAGS_NONE = 0,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixProgramGroupSingleModule {
    pub module: OptixModule,
    pub entryFunctionName: *const ::std::os::raw::c_char,
}
impl Default for OptixProgramGroupSingleModule {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixProgramGroupHitgroup {
    pub moduleCH: OptixModule,
    pub entryFunctionNameCH: *const ::std::os::raw::c_char,
    pub moduleAH: OptixModule,
    pub entryFunctionNameAH: *const ::std::os::raw::c_char,
    pub moduleIS: OptixModule,
    pub entryFunctionNameIS: *const ::std::os::raw::c_char,
}
impl Default for OptixProgramGroupHitgroup {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixProgramGroupCallables {
    pub moduleDC: OptixModule,
    pub entryFunctionNameDC: *const ::std::os::raw::c_char,
    pub moduleCC: OptixModule,
    pub entryFunctionNameCC: *const ::std::os::raw::c_char,
}
impl Default for OptixProgramGroupCallables {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct OptixProgramGroupDesc {
    pub kind: OptixProgramGroupKind,
    pub flags: ::std::os::raw::c_uint,
    pub __bindgen_anon_1: OptixProgramGroupDesc__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union OptixProgramGroupDesc__bindgen_ty_1 {
    pub raygen: OptixProgramGroupSingleModule,
    pub miss: OptixProgramGroupSingleModule,
    pub exception: OptixProgramGroupSingleModule,
    pub callables: OptixProgramGroupCallables,
    pub hitgroup: OptixProgramGroupHitgroup,
}
impl Default for OptixProgramGroupDesc__bindgen_ty_1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
impl Default for OptixProgramGroupDesc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct OptixProgramGroupOptions {
    pub reserved: ::std::os::raw::c_int,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixExceptionCodes {
    OPTIX_EXCEPTION_CODE_STACK_OVERFLOW = -1,
    OPTIX_EXCEPTION_CODE_TRACE_DEPTH_EXCEEDED = -2,
    OPTIX_EXCEPTION_CODE_TRAVERSAL_DEPTH_EXCEEDED = -3,
    OPTIX_EXCEPTION_CODE_TRAVERSAL_INVALID_TRAVERSABLE = -5,
    OPTIX_EXCEPTION_CODE_TRAVERSAL_INVALID_MISS_SBT = -6,
    OPTIX_EXCEPTION_CODE_TRAVERSAL_INVALID_HIT_SBT = -7,
    OPTIX_EXCEPTION_CODE_UNSUPPORTED_PRIMITIVE_TYPE = -8,
    OPTIX_EXCEPTION_CODE_INVALID_RAY = -9,
    OPTIX_EXCEPTION_CODE_CALLABLE_PARAMETER_MISMATCH = -10,
    OPTIX_EXCEPTION_CODE_BUILTIN_IS_MISMATCH = -11,
    OPTIX_EXCEPTION_CODE_CALLABLE_INVALID_SBT = -12,
    OPTIX_EXCEPTION_CODE_CALLABLE_NO_DC_SBT_RECORD = -13,
    OPTIX_EXCEPTION_CODE_CALLABLE_NO_CC_SBT_RECORD = -14,
    OPTIX_EXCEPTION_CODE_UNSUPPORTED_SINGLE_LEVEL_GAS = -15,
    OPTIX_EXCEPTION_CODE_INVALID_VALUE_ARGUMENT_0 = -16,
    OPTIX_EXCEPTION_CODE_INVALID_VALUE_ARGUMENT_1 = -17,
    OPTIX_EXCEPTION_CODE_INVALID_VALUE_ARGUMENT_2 = -18,
    OPTIX_EXCEPTION_CODE_UNSUPPORTED_DATA_ACCESS = -32,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixExceptionFlags {
    OPTIX_EXCEPTION_FLAG_NONE = 0,
    OPTIX_EXCEPTION_FLAG_STACK_OVERFLOW = 1,
    OPTIX_EXCEPTION_FLAG_TRACE_DEPTH = 2,
    OPTIX_EXCEPTION_FLAG_USER = 4,
    OPTIX_EXCEPTION_FLAG_DEBUG = 8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixPipelineCompileOptions {
    pub usesMotionBlur: ::std::os::raw::c_int,
    pub traversableGraphFlags: ::std::os::raw::c_uint,
    pub numPayloadValues: ::std::os::raw::c_int,
    pub numAttributeValues: ::std::os::raw::c_int,
    pub exceptionFlags: ::std::os::raw::c_uint,
    pub pipelineLaunchParamsVariableName: *const ::std::os::raw::c_char,
    pub usesPrimitiveTypeFlags: ::std::os::raw::c_uint,
    pub reserved: ::std::os::raw::c_uint,
    pub reserved2: usize,
}
impl Default for OptixPipelineCompileOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixPipelineLinkOptions {
    pub maxTraceDepth: ::std::os::raw::c_uint,
    pub debugLevel: OptixCompileDebugLevel,
}
impl Default for OptixPipelineLinkOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixShaderBindingTable {
    pub raygenRecord: CUdeviceptr,
    pub exceptionRecord: CUdeviceptr,
    pub missRecordBase: CUdeviceptr,
    pub missRecordStrideInBytes: ::std::os::raw::c_uint,
    pub missRecordCount: ::std::os::raw::c_uint,
    pub hitgroupRecordBase: CUdeviceptr,
    pub hitgroupRecordStrideInBytes: ::std::os::raw::c_uint,
    pub hitgroupRecordCount: ::std::os::raw::c_uint,
    pub callablesRecordBase: CUdeviceptr,
    pub callablesRecordStrideInBytes: ::std::os::raw::c_uint,
    pub callablesRecordCount: ::std::os::raw::c_uint,
}
impl Default for OptixShaderBindingTable {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct OptixStackSizes {
    pub cssRG: ::std::os::raw::c_uint,
    pub cssMS: ::std::os::raw::c_uint,
    pub cssCH: ::std::os::raw::c_uint,
    pub cssAH: ::std::os::raw::c_uint,
    pub cssIS: ::std::os::raw::c_uint,
    pub cssCC: ::std::os::raw::c_uint,
    pub dssDC: ::std::os::raw::c_uint,
}
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixQueryFunctionTableOptions {
    OPTIX_QUERY_FUNCTION_TABLE_OPTION_DUMMY = 0,
}
pub type OptixQueryFunctionTable_t = ::std::option::Option<
    unsafe extern "C" fn(
        abiId: ::std::os::raw::c_int,
        numOptions: ::std::os::raw::c_uint,
        arg1: *mut OptixQueryFunctionTableOptions,
        arg2: *mut *const ::std::os::raw::c_void,
        functionTable: *mut ::std::os::raw::c_void,
        sizeOfTable: usize,
    ) -> OptixResult,
>;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct OptixBuiltinISOptions {
    pub builtinISModuleType: OptixPrimitiveType,
    pub usesMotionBlur: ::std::os::raw::c_int,
}
impl Default for OptixBuiltinISOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
extern "C" {
    pub fn optixGetErrorName(result: OptixResult) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn optixGetErrorString(result: OptixResult) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn optixDeviceContextCreate(
        fromContext: CUcontext,
        options: *const OptixDeviceContextOptions,
        context: *mut OptixDeviceContext,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextDestroy(context: OptixDeviceContext) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetProperty(
        context: OptixDeviceContext,
        property: OptixDeviceProperty,
        value: *mut ::std::os::raw::c_void,
        sizeInBytes: usize,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetLogCallback(
        context: OptixDeviceContext,
        callbackFunction: OptixLogCallback,
        callbackData: *mut ::std::os::raw::c_void,
        callbackLevel: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetCacheEnabled(
        context: OptixDeviceContext,
        enabled: ::std::os::raw::c_int,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetCacheLocation(
        context: OptixDeviceContext,
        location: *const ::std::os::raw::c_char,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetCacheDatabaseSizes(
        context: OptixDeviceContext,
        lowWaterMark: usize,
        highWaterMark: usize,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetCacheEnabled(
        context: OptixDeviceContext,
        enabled: *mut ::std::os::raw::c_int,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetCacheLocation(
        context: OptixDeviceContext,
        location: *mut ::std::os::raw::c_char,
        locationSize: usize,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetCacheDatabaseSizes(
        context: OptixDeviceContext,
        lowWaterMark: *mut usize,
        highWaterMark: *mut usize,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixPipelineCreate(
        context: OptixDeviceContext,
        pipelineCompileOptions: *const OptixPipelineCompileOptions,
        pipelineLinkOptions: *const OptixPipelineLinkOptions,
        programGroups: *const OptixProgramGroup,
        numProgramGroups: ::std::os::raw::c_uint,
        logString: *mut ::std::os::raw::c_char,
        logStringSize: *mut usize,
        pipeline: *mut OptixPipeline,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixPipelineDestroy(pipeline: OptixPipeline) -> OptixResult;
}
extern "C" {
    pub fn optixPipelineSetStackSize(
        pipeline: OptixPipeline,
        directCallableStackSizeFromTraversal: ::std::os::raw::c_uint,
        directCallableStackSizeFromState: ::std::os::raw::c_uint,
        continuationStackSize: ::std::os::raw::c_uint,
        maxTraversableGraphDepth: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixModuleCreateFromPTX(
        context: OptixDeviceContext,
        moduleCompileOptions: *const OptixModuleCompileOptions,
        pipelineCompileOptions: *const OptixPipelineCompileOptions,
        PTX: *const ::std::os::raw::c_char,
        PTXsize: usize,
        logString: *mut ::std::os::raw::c_char,
        logStringSize: *mut usize,
        module: *mut OptixModule,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixModuleDestroy(module: OptixModule) -> OptixResult;
}
extern "C" {
    pub fn optixBuiltinISModuleGet(
        context: OptixDeviceContext,
        moduleCompileOptions: *const OptixModuleCompileOptions,
        pipelineCompileOptions: *const OptixPipelineCompileOptions,
        builtinISOptions: *const OptixBuiltinISOptions,
        builtinModule: *mut OptixModule,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixProgramGroupGetStackSize(
        programGroup: OptixProgramGroup,
        stackSizes: *mut OptixStackSizes,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixProgramGroupCreate(
        context: OptixDeviceContext,
        programDescriptions: *const OptixProgramGroupDesc,
        numProgramGroups: ::std::os::raw::c_uint,
        options: *const OptixProgramGroupOptions,
        logString: *mut ::std::os::raw::c_char,
        logStringSize: *mut usize,
        programGroups: *mut OptixProgramGroup,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixProgramGroupDestroy(programGroup: OptixProgramGroup) -> OptixResult;
}
extern "C" {
    pub fn optixLaunch(
        pipeline: OptixPipeline,
        stream: CUstream,
        pipelineParams: CUdeviceptr,
        pipelineParamsSize: usize,
        sbt: *const OptixShaderBindingTable,
        width: ::std::os::raw::c_uint,
        height: ::std::os::raw::c_uint,
        depth: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixSbtRecordPackHeader(
        programGroup: OptixProgramGroup,
        sbtRecordHeaderHostPointer: *mut ::std::os::raw::c_void,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelComputeMemoryUsage(
        context: OptixDeviceContext,
        accelOptions: *const OptixAccelBuildOptions,
        buildInputs: *const OptixBuildInput,
        numBuildInputs: ::std::os::raw::c_uint,
        bufferSizes: *mut OptixAccelBufferSizes,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelBuild(
        context: OptixDeviceContext,
        stream: CUstream,
        accelOptions: *const OptixAccelBuildOptions,
        buildInputs: *const OptixBuildInput,
        numBuildInputs: ::std::os::raw::c_uint,
        tempBuffer: CUdeviceptr,
        tempBufferSizeInBytes: usize,
        outputBuffer: CUdeviceptr,
        outputBufferSizeInBytes: usize,
        outputHandle: *mut OptixTraversableHandle,
        emittedProperties: *const OptixAccelEmitDesc,
        numEmittedProperties: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelGetRelocationInfo(
        context: OptixDeviceContext,
        handle: OptixTraversableHandle,
        info: *mut OptixAccelRelocationInfo,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelCheckRelocationCompatibility(
        context: OptixDeviceContext,
        info: *const OptixAccelRelocationInfo,
        compatible: *mut ::std::os::raw::c_int,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelRelocate(
        context: OptixDeviceContext,
        stream: CUstream,
        info: *const OptixAccelRelocationInfo,
        instanceTraversableHandles: CUdeviceptr,
        numInstanceTraversableHandles: usize,
        targetAccel: CUdeviceptr,
        targetAccelSizeInBytes: usize,
        targetHandle: *mut OptixTraversableHandle,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelCompact(
        context: OptixDeviceContext,
        stream: CUstream,
        inputHandle: OptixTraversableHandle,
        outputBuffer: CUdeviceptr,
        outputBufferSizeInBytes: usize,
        outputHandle: *mut OptixTraversableHandle,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixConvertPointerToTraversableHandle(
        onDevice: OptixDeviceContext,
        pointer: CUdeviceptr,
        traversableType: OptixTraversableType,
        traversableHandle: *mut OptixTraversableHandle,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserCreate(
        context: OptixDeviceContext,
        modelKind: OptixDenoiserModelKind,
        options: *const OptixDenoiserOptions,
        denoiser: *mut OptixDenoiser,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserCreateWithUserModel(
        context: OptixDeviceContext,
        userData: *const ::std::os::raw::c_void,
        userDataSizeInBytes: usize,
        denoiser: *mut OptixDenoiser,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserDestroy(denoiser: OptixDenoiser) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserComputeMemoryResources(
        denoiser: OptixDenoiser,
        outputWidth: ::std::os::raw::c_uint,
        outputHeight: ::std::os::raw::c_uint,
        returnSizes: *mut OptixDenoiserSizes,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserSetup(
        denoiser: OptixDenoiser,
        stream: CUstream,
        inputWidth: ::std::os::raw::c_uint,
        inputHeight: ::std::os::raw::c_uint,
        denoiserState: CUdeviceptr,
        denoiserStateSizeInBytes: usize,
        scratch: CUdeviceptr,
        scratchSizeInBytes: usize,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserInvoke(
        denoiser: OptixDenoiser,
        stream: CUstream,
        params: *const OptixDenoiserParams,
        denoiserState: CUdeviceptr,
        denoiserStateSizeInBytes: usize,
        guideLayer: *const OptixDenoiserGuideLayer,
        layers: *const OptixDenoiserLayer,
        numLayers: ::std::os::raw::c_uint,
        inputOffsetX: ::std::os::raw::c_uint,
        inputOffsetY: ::std::os::raw::c_uint,
        scratch: CUdeviceptr,
        scratchSizeInBytes: usize,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserComputeIntensity(
        denoiser: OptixDenoiser,
        stream: CUstream,
        inputImage: *const OptixImage2D,
        outputIntensity: CUdeviceptr,
        scratch: CUdeviceptr,
        scratchSizeInBytes: usize,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserComputeAverageColor(
        denoiser: OptixDenoiser,
        stream: CUstream,
        inputImage: *const OptixImage2D,
        outputAverageColor: CUdeviceptr,
        scratch: CUdeviceptr,
        scratchSizeInBytes: usize,
    ) -> OptixResult;
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]
pub struct OptixFunctionTable {
    pub optixGetErrorName: ::std::option::Option<
        unsafe extern "C" fn(result: OptixResult) -> *const ::std::os::raw::c_char,
    >,
    pub optixGetErrorString: ::std::option::Option<
        unsafe extern "C" fn(result: OptixResult) -> *const ::std::os::raw::c_char,
    >,
    pub optixDeviceContextCreate: ::std::option::Option<
        unsafe extern "C" fn(
            fromContext: CUcontext,
            options: *const OptixDeviceContextOptions,
            context: *mut OptixDeviceContext,
        ) -> OptixResult,
    >,
    pub optixDeviceContextDestroy:
        ::std::option::Option<unsafe extern "C" fn(context: OptixDeviceContext) -> OptixResult>,
    pub optixDeviceContextGetProperty: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            property: OptixDeviceProperty,
            value: *mut ::std::os::raw::c_void,
            sizeInBytes: usize,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetLogCallback: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            callbackFunction: OptixLogCallback,
            callbackData: *mut ::std::os::raw::c_void,
            callbackLevel: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetCacheEnabled: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            enabled: ::std::os::raw::c_int,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetCacheLocation: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            location: *const ::std::os::raw::c_char,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetCacheDatabaseSizes: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            lowWaterMark: usize,
            highWaterMark: usize,
        ) -> OptixResult,
    >,
    pub optixDeviceContextGetCacheEnabled: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            enabled: *mut ::std::os::raw::c_int,
        ) -> OptixResult,
    >,
    pub optixDeviceContextGetCacheLocation: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            location: *mut ::std::os::raw::c_char,
            locationSize: usize,
        ) -> OptixResult,
    >,
    pub optixDeviceContextGetCacheDatabaseSizes: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            lowWaterMark: *mut usize,
            highWaterMark: *mut usize,
        ) -> OptixResult,
    >,
    pub optixModuleCreateFromPTX: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            moduleCompileOptions: *const OptixModuleCompileOptions,
            pipelineCompileOptions: *const OptixPipelineCompileOptions,
            PTX: *const ::std::os::raw::c_char,
            PTXsize: usize,
            logString: *mut ::std::os::raw::c_char,
            logStringSize: *mut usize,
            module: *mut OptixModule,
        ) -> OptixResult,
    >,
    pub optixModuleDestroy:
        ::std::option::Option<unsafe extern "C" fn(module: OptixModule) -> OptixResult>,
    pub optixBuiltinISModuleGet: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            moduleCompileOptions: *const OptixModuleCompileOptions,
            pipelineCompileOptions: *const OptixPipelineCompileOptions,
            builtinISOptions: *const OptixBuiltinISOptions,
            builtinModule: *mut OptixModule,
        ) -> OptixResult,
    >,
    pub optixProgramGroupCreate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            programDescriptions: *const OptixProgramGroupDesc,
            numProgramGroups: ::std::os::raw::c_uint,
            options: *const OptixProgramGroupOptions,
            logString: *mut ::std::os::raw::c_char,
            logStringSize: *mut usize,
            programGroups: *mut OptixProgramGroup,
        ) -> OptixResult,
    >,
    pub optixProgramGroupDestroy:
        ::std::option::Option<unsafe extern "C" fn(programGroup: OptixProgramGroup) -> OptixResult>,
    pub optixProgramGroupGetStackSize: ::std::option::Option<
        unsafe extern "C" fn(
            programGroup: OptixProgramGroup,
            stackSizes: *mut OptixStackSizes,
        ) -> OptixResult,
    >,
    pub optixPipelineCreate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            pipelineCompileOptions: *const OptixPipelineCompileOptions,
            pipelineLinkOptions: *const OptixPipelineLinkOptions,
            programGroups: *const OptixProgramGroup,
            numProgramGroups: ::std::os::raw::c_uint,
            logString: *mut ::std::os::raw::c_char,
            logStringSize: *mut usize,
            pipeline: *mut OptixPipeline,
        ) -> OptixResult,
    >,
    pub optixPipelineDestroy:
        ::std::option::Option<unsafe extern "C" fn(pipeline: OptixPipeline) -> OptixResult>,
    pub optixPipelineSetStackSize: ::std::option::Option<
        unsafe extern "C" fn(
            pipeline: OptixPipeline,
            directCallableStackSizeFromTraversal: ::std::os::raw::c_uint,
            directCallableStackSizeFromState: ::std::os::raw::c_uint,
            continuationStackSize: ::std::os::raw::c_uint,
            maxTraversableGraphDepth: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixAccelComputeMemoryUsage: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            accelOptions: *const OptixAccelBuildOptions,
            buildInputs: *const OptixBuildInput,
            numBuildInputs: ::std::os::raw::c_uint,
            bufferSizes: *mut OptixAccelBufferSizes,
        ) -> OptixResult,
    >,
    pub optixAccelBuild: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            accelOptions: *const OptixAccelBuildOptions,
            buildInputs: *const OptixBuildInput,
            numBuildInputs: ::std::os::raw::c_uint,
            tempBuffer: CUdeviceptr,
            tempBufferSizeInBytes: usize,
            outputBuffer: CUdeviceptr,
            outputBufferSizeInBytes: usize,
            outputHandle: *mut OptixTraversableHandle,
            emittedProperties: *const OptixAccelEmitDesc,
            numEmittedProperties: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixAccelGetRelocationInfo: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            handle: OptixTraversableHandle,
            info: *mut OptixAccelRelocationInfo,
        ) -> OptixResult,
    >,
    pub optixAccelCheckRelocationCompatibility: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            info: *const OptixAccelRelocationInfo,
            compatible: *mut ::std::os::raw::c_int,
        ) -> OptixResult,
    >,
    pub optixAccelRelocate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            info: *const OptixAccelRelocationInfo,
            instanceTraversableHandles: CUdeviceptr,
            numInstanceTraversableHandles: usize,
            targetAccel: CUdeviceptr,
            targetAccelSizeInBytes: usize,
            targetHandle: *mut OptixTraversableHandle,
        ) -> OptixResult,
    >,
    pub optixAccelCompact: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            inputHandle: OptixTraversableHandle,
            outputBuffer: CUdeviceptr,
            outputBufferSizeInBytes: usize,
            outputHandle: *mut OptixTraversableHandle,
        ) -> OptixResult,
    >,
    pub optixConvertPointerToTraversableHandle: ::std::option::Option<
        unsafe extern "C" fn(
            onDevice: OptixDeviceContext,
            pointer: CUdeviceptr,
            traversableType: OptixTraversableType,
            traversableHandle: *mut OptixTraversableHandle,
        ) -> OptixResult,
    >,
    pub optixSbtRecordPackHeader: ::std::option::Option<
        unsafe extern "C" fn(
            programGroup: OptixProgramGroup,
            sbtRecordHeaderHostPointer: *mut ::std::os::raw::c_void,
        ) -> OptixResult,
    >,
    pub optixLaunch: ::std::option::Option<
        unsafe extern "C" fn(
            pipeline: OptixPipeline,
            stream: CUstream,
            pipelineParams: CUdeviceptr,
            pipelineParamsSize: usize,
            sbt: *const OptixShaderBindingTable,
            width: ::std::os::raw::c_uint,
            height: ::std::os::raw::c_uint,
            depth: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixDenoiserCreate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            modelKind: OptixDenoiserModelKind,
            options: *const OptixDenoiserOptions,
            returnHandle: *mut OptixDenoiser,
        ) -> OptixResult,
    >,
    pub optixDenoiserDestroy:
        ::std::option::Option<unsafe extern "C" fn(handle: OptixDenoiser) -> OptixResult>,
    pub optixDenoiserComputeMemoryResources: ::std::option::Option<
        unsafe extern "C" fn(
            handle: OptixDenoiser,
            maximumInputWidth: ::std::os::raw::c_uint,
            maximumInputHeight: ::std::os::raw::c_uint,
            returnSizes: *mut OptixDenoiserSizes,
        ) -> OptixResult,
    >,
    pub optixDenoiserSetup: ::std::option::Option<
        unsafe extern "C" fn(
            denoiser: OptixDenoiser,
            stream: CUstream,
            inputWidth: ::std::os::raw::c_uint,
            inputHeight: ::std::os::raw::c_uint,
            state: CUdeviceptr,
            stateSizeInBytes: usize,
            scratch: CUdeviceptr,
            scratchSizeInBytes: usize,
        ) -> OptixResult,
    >,
    pub optixDenoiserInvoke: ::std::option::Option<
        unsafe extern "C" fn(
            denoiser: OptixDenoiser,
            stream: CUstream,
            params: *const OptixDenoiserParams,
            denoiserState: CUdeviceptr,
            denoiserStateSizeInBytes: usize,
            guideLayer: *const OptixDenoiserGuideLayer,
            layers: *const OptixDenoiserLayer,
            numLayers: ::std::os::raw::c_uint,
            inputOffsetX: ::std::os::raw::c_uint,
            inputOffsetY: ::std::os::raw::c_uint,
            scratch: CUdeviceptr,
            scratchSizeInBytes: usize,
        ) -> OptixResult,
    >,
    pub optixDenoiserComputeIntensity: ::std::option::Option<
        unsafe extern "C" fn(
            handle: OptixDenoiser,
            stream: CUstream,
            inputImage: *const OptixImage2D,
            outputIntensity: CUdeviceptr,
            scratch: CUdeviceptr,
            scratchSizeInBytes: usize,
        ) -> OptixResult,
    >,
    pub optixDenoiserComputeAverageColor: ::std::option::Option<
        unsafe extern "C" fn(
            handle: OptixDenoiser,
            stream: CUstream,
            inputImage: *const OptixImage2D,
            outputAverageColor: CUdeviceptr,
            scratch: CUdeviceptr,
            scratchSizeInBytes: usize,
        ) -> OptixResult,
    >,
    pub optixDenoiserCreateWithUserModel: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            data: *const ::std::os::raw::c_void,
            dataSizeInBytes: usize,
            returnHandle: *mut OptixDenoiser,
        ) -> OptixResult,
    >,
}
